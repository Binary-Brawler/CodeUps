#!/usr/bin/env python3

# Lame CodeUp - ftpRipper - Simple FTP Enumeration
# ---------------------------------------------------------------
# Author    : Chaotic_Guru                                       |
# Github    : https://github.com/ChaoticHackingNetwork           |
# Discord   : https://discord.gg/nv445EX (ChaoticHackingNetwork) | 						 |					 
# ---------------------------------------------------------------

from ftplib import FTP
import sys

def ftp_connection(hostname, port=21):
    ftp = FTP()
    ftp.connect(hostname, port)
    ftp.login()
    return ftp

def check_anonymous_login(ftp):
    try:
        ftp.login()
        ftp.quit()
        return True
    except Exception as e:
        return False

def check_file_listing(ftp):
    try:
        files = ftp.nlst()
        return files
    except Exception as e:
        return []

def check_upload(ftp, file_path):
    try:
        with open(file_path, 'rb') as file:
            ftp.storbinary('STOR ' + file_path.split('/')[-1], file)
        return True
    except Exception as e:
        return False

if __name__ == "__main__":
    if len(sys.argv) < 2:
        print("Usage: python ftp_tasks.py <target_ftp_hostname>")
        sys.exit(1)

    target_ftp_hostname = sys.argv[1]
    target_ftp_port = 21  # Change this if your FTP server uses a different port

    # Establish FTP connection
    ftp = ftp_connection(target_ftp_hostname, target_ftp_port)

    # Task 1: Check if anonymous login is possible
    anonymous_login = check_anonymous_login(ftp)
    if anonymous_login:
        print("Anonymous login is possible.")
    else:
        print("Anonymous login is not possible.")

    # Task 2: Verify if we can view any files on the target FTP server
    files_on_server = check_file_listing(ftp)
    if files_on_server:
        print("Files available on the server:")
        for file in files_on_server:
            print(file)
    else:
        print("No files found on the server.")

    # Task 3: Determine whether we can upload files to the target FTP server
    file_to_upload = "test.html"  # Replace this with the file you want to upload
    upload_result = check_upload(ftp, file_to_upload)
    if upload_result:
        print("File uploaded successfully.")
    else:
        print("Failed to upload the file.")

    # Close the FTP connection after completing all tasks
    ftp.quit()
