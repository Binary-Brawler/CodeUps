!/usr/bin/env python3

import sys
import socket
import time
import threading

# take in as args - target,
# starting and ending port
target = sys.argv[1]
s_port = int(sys.argv[2])
e_port = int(sys.argv[3])
threads = []


def portScanner(port):  # Port scan function
    # Create socket object, set timeout and connect
    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    sock.settimeout(0.50)
    conn = sock.connect_ex((target, port))

    """
    Since we used connect_ex, returned
    will be an error instead of exception
    0 = open & 1 = closed
    """
    if conn == 0:
        print(f"[*] Port: {port:<4} is open")  # Print ports evenly
    else:
        pass  # Pass on closed ports

    sock.close()  # Close connection


def portScannerThreaded():
    # Record the start time of the scan
    start_time = time.time()

    # Loop between start and end ports
    for port in range(s_port, e_port):
        # Create a thread for each port and start it
        thread = threading.Thread(target=portScanner, args=(port,))
        thread.start()
        threads.append(thread)

    # Wait for all threads to finish
    for thread in threads:
        thread.join()

    # Record the end time of the scan
    end_time = time.time()
    # Calculate the time elapsed and display it
    elapsed_time = end_time - start_time
    print(f"\nScan completed in {elapsed_time:.2f} seconds.")


# Don't worry, we will touch on this...
if __name__ == '__main__':

    if len(sys.argv) != 4:
        print("Usage: python portScanner <target> <Starting Port> <Ending Port>")
        sys.exit(1)

    portScannerThreaded()
